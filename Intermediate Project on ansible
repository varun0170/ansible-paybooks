#Task#
Create a playbook that:

Installs nginx only on nodes tagged as "web"

Sets up a custom index.html using a Jinja2 template

Restarts nginx only when the template changes

Uses variables for package names and ports

Encrypts AWS keys using Ansible Vault

Uses dynamic inventory (aws_ec2.yml)

#step:1#  aws_ec2.yml — Dynamic Inventory Config
plugin: aws_ec2
regions:
  - us-east-1
keyed_groups:
  - key: tags.Name
    prefix: tag
filters:
  tag:Role: web  # Only fetch instances tagged with Role=web
hostnames:
  - public-ip-address

#step:2#   playbook.yml — Main Playbook
- name: Configure Web Servers
  hosts: tag_Role_web
  become: true
  vars_files:
    - vars/main.yml
    - secrets/vault.yml

  tasks:
    - name: Install nginx
      apt:
        name: "{{ web_package }}"
        state: present
        update_cache: true

    - name: Deploy custom index.html
      template:
        src: templates/index.html.j2
        dest: /var/www/html/index.html
        owner: www-data
        group: www-data
        mode: '0644'
      notify: Restart nginx

  handlers:
    - name: Restart nginx
      service:
        name: nginx
        state: restarted

####step3: ##htmlfile#
<html>
  <head><title>Welcome</title></head>
  <body>
    <h1>Hello from {{ inventory_hostname }}</h1>
    <p>Running on port {{ web_port }}</p>
  </body>
</html>

####step4 #####vars/main.yml — Variables#####
web_package: nginx
web_port: 80


####step5 secrets/vault.yml####
ansible-vault create secrets/vault.yml

aws_access_key: aws accout accesskey 
aws_secret_key: aws accout secretkey

final step Run the Playbook
ansible-playbook playbook.yml --ask-vault-pass


